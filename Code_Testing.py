# This Python Notebook is used to do unit and performtive testing on on the Mid-Module Assingment Floyd Warshall Code 
# The test input and output were taken from (Shivali Bhadaniya, 2022), https://favtutor.com/blogs/floyd-warshall-algorithm.

import unittest
import datetime #Used to conduct performative testing 
import sys # As per Assignement instuctive code, sys needs to be imported to access sys.maxsize.
           # However a very large number could be defined instead.

start_time =datetime.datetime.now() #initiate timestamp before starting of function

nv = 4  # Number of vertices
INF = sys.maxsize # Use a large number instead inplace of infinity aslo equvalent to sys 

def floyd(*args):
    """
    This function is an interative implementation of Floyd Warshall algorithm

    Paremeters:
    arugment1 (list): The input is a 4 x 4 matrix comprised of the 4 nested loops within a list

    Returns:
    4 x 4 matrix list of integers with the shortes distance between nodes    
    """
    dist = list(map(lambda p: list(map(lambda q: q, p)), H))
    
    # Adding vertices individually using recursion 
    #p and q and invoked and are used as varaibles indecies for colm and row respectivly 
    for r in range(nv): 
        for p in range(nv): 
            for q in range(nv):
                dist[p][q] = min(dist[p][q], dist[p][r] + dist[r][q])
    sol(dist)

# Testing Code: Unit Test of Floyd Function -----------------------------------------------------------------------------------------------------------
# Unit test of Floyd Algorithm floyd
    Test_Output = [[0, 5, 15, 10], [20, 0, 10, 5], [30, 35, 0, 15], [15, 20, 5, 0]] # This is the known correct output from the Floyd Algorithm from (Shivali Bhadaniya, 2022)
    assert dist == Test_Output, "Test failed"
# Testing Code: Unit Test of Floyd Function -----------------------------------------------------------------------------------------------------------

# Printing the output, This is a form of Manual testing also check the output is correct 
def sol(dist):
    """
    This fucntion prints the output from the Floyd Warshall Aglorithm defined above this

    Parameters:
    The input is a list map of generated by Floyd Aloroghtm 

    Returns: 
    The function will iterate through the mapped list produced by the Floyd function and print it
    
    """
    for p in range(nv):
        for q in range(nv):
            if(dist[p][q] == INF):
                print("INF", end=" ")
            else:
                print(dist[p][q], end="  ")
        print(" ")

H = [[0, 5, INF, INF],   #This is an input Matrix from (Shivali Bhadaniya, 2022), it is also used in unit testing. The correct output is known for this input and is used for validation. This is included here as for of manual testing.
         [50, 0, 15, 5],
         [30, INF, 0, 15],
         [15, INF, 5, 0]] 

print ("\nManual Unit Test:\n")
floyd(H)
print("\n")

end_time=datetime.datetime.now() #end time stamp one algorith has completed running 
print("Algorithm runtime is:",end= "")
print (end_time-start_time)  # print algorithm runtime 

# The matrix below is the known correct output from (Shivali Bhadaniya, 2022)
# 0  5  15  10
# 20  0  10  5
# 30  35  0  15
# 15  20  5  0

